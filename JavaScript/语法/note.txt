javascript脚本可以放在<head></head>或<body></body>之间

标识符--变量、函数、属性的名称，或者函数的参数
标识符命名规则：
（1）由字母、数字、下划线（_）、或美元符号($)组成
（2）不能以数字开头
（3）不能使用关键字、保留字等作为标识符

声明变量：var
省略var声明的变量是全局变量


数据类型：undefined、null、Boolean、number、string、object（复杂数据类型）

undefined--声明了变量但没有赋值
null--表示一个空对象指针(注：undefined值是派生自null值，所以undefined==null的返回结果是true)
number--表示整数和浮点数
	  --NaN:即非数字(Not a Number)，是一个特殊的数值。
	  ！任何涉及NaN的操作（如NaN/10）都会返回NaN
	  ！！NaN与任何值都不相等，包括NaN本身
boolean--1、除0以外的所有数字，转换为布尔型都为true;
		 2、除""之外的所有字符，转换为布尔型都为true
		 3、null和undefined转换为布尔型为false


typeof -- 检测变量类型

isNaN(n) -- 检测n是否是“非数值”，返回Boolean(isNaN()对接收的数值，先尝试转换为数值，再检测是否为非数值)


数值转换----
Number()
parseInt()--转换的字符串必须是以数字开头
			说明：1、转换空字符串返回NaN
				  2、提供第二个参数：转换时使用的基数（即多少进制）
parseFloat()--只有第一个小数点有效；

说明：1、Number()可用于任何数据类型
	  2、parseInt()和parseFloat()则专门用于把字符串转换成数值

toString()与String()
str.toString() -- 将str转换为字符串，str可以是数值，布尔值、对象和字符串
说明：在不知道要转换的值是不是null或undefined的情况下，还可以使用String()函数，它可以将任何类型的值转换为字符串


算数操作符：+、-、*、/、%、递增、递减
1、递增
++a和a++ ：++a先返回递增之后的a的值
		 ：a++先返回a的原值，再返回递增之后的值
2、递减（同理）

赋值操作符：=
复合赋值：+=、-+、*=、/=、%=

比较操作符：>、<、>=、<=、==、===、!=、!==
== ：相等，只比较数值是否相等
=== ：相等，比较值的同时比较数据类型是否相等
!= ：不相等，比较值是否不相等
!== : 不相等，比较值的同时比较数据类型是否不相等
返回值：Boolean型

三元操作符：条件?执行代码1:执行代码2;
可替代if条件句

逻辑操作符：&&、||、!
&&: 与（只要有一个条件不成立，返回false）
在有一个操作数不是布尔值的情况，逻辑与操作就不一定返回值：
1、如果第一个操作数隐式类型转换后为true，则返回最后一个操作数
2、如果第一个操作数隐式类型转换后为false，则返回第一个操作数
3、操作数中只要有一个是null，则返回值是null
4、操作数中只要有一个是NaN，则返回值是NaN
5、操作数中只要有一个是undefined，则返回值是undefined

||: 或（只要有一个条件成立，返回true）
在有一个操作数不是布尔值的情况，逻辑或操作就不一定返回值：
1、如果第一个操作数隐式类型转换后为true，则返回第一个操作数
2、如果第一个操作数隐式类型转换后为false，则继续往后判断，返回为true的操作数;若都为false则返回最后一个
3、如果连个操作数是null，则返回null
4、如果连个操作数是NaN，则返回NaN
5、如果连个操作数是undefined，则返回undefined

! : 非
1、无论操作数是什么数据类型，返回的都是布尔型
2、!!同时使用两个逻辑非操作符时：
   -第一个逻辑非操作会基于无论什么操作数返回一个布尔值
   -第二个逻辑非则是对第一个取反
