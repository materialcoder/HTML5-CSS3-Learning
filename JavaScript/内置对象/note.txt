1、Array
创建：new Array();
	  cols=[2,3,4,5];

array.length  获取数组的长度，返回值为number

数组的栈方法:
push()
arrayObject.push(newele1,newele2,...,newelex);
功能：把它的参数顺序添加到arrayObject的尾部。
返回值：把指定的值添加到数组后的新长度

unshift()
arrayObject.unshift(newele1,newele2,...,newelex);
功能：把它的参数顺序添加到arrayObject的开头。
返回值：把指定的值添加到数组后的新长度

pop()
arrayObject.pop()
功能：删除arrayObject的最后一个元素
返回值：被删除的那个元素

shift()
arrayObject.shift()
功能：删除arrayObject的第一个元素
返回值：被删除的那个元素


join()
arrayObject.join(separator)
功能：用于把数组中的所有元素放入一个字符串
返回值：字符串

reverse()
arrayObject.reverse()
功能：用于颠倒数组中元素的顺序
返回值：数组

sort()
arrayObject.sort(sortby)
功能：用于对数组中元素的进行排序
返回值：数组
说明：1、即使数组中的每一项都是数值，sort()方法比较的也是字符串
2、sort()方法可以接收一个比较函数作为参数

concat()
arrayObject.concat(arrayX,arrayX,...,arrayX);
功能：用于连接两个或多个数组
返回值：数组

slice()
arrayObject.slice(start,end);
功能：从已有的数组中返回选定的元素
start（必须），如果为负，从数组尾部开始算起
end(可选),
范围：[start,end)
返回值：数组


splice()
删除：
arrayObject.splice(index,count)
功能：删除从index处开始的零个或多个元素
返回值：含有被删除的元素的数组
说明：count是要删除的项目数量，如果为0，则不会删除项目，如果不设置，则删除从index开始的所有值

插入：
arrayObject.splice(index,0,item1,...,itemX)
功能：在指定位置插入值
参数：index：起始位置
	  0：要删除的项数
	  item：要插入的项
返回值：数组

替换：
arrayObject.splice(index,count,item1,...,itemX)
功能：在指定位置插入值,且同时删除任意数量的项
参数：index：起始位置
	  0：要删除的橡树
	  item：要插入的项
返回值：从原始数组中删除的项(如果没有删除任何项，则返回空数组)


indexOf()
arrayObject.indexOf(searchvalue,startIndex)
功能：从数组的开头（位置0）开始向后查找
参数：searchvalue:必须，要查找的项；
startindex：可选，起点位置的索引
返回值：number，查找的项(第一个)在数组中的位置，没有找到的情况下返回-1

lastIndexOf()
arrayObject.lastIndexOf(searchvalue,startIndex)
功能：从数组的末尾开始向前查找
参数：searchvalue:必须，要查找的项；
startindex：可选，起点位置的索引
返回值：number，查找的项(第一个)在数组中的位置，没有找到的情况下返回-1

indexOf()、lastIndexOf()兼容性：
IE9+、Firefox2+、Safari3+、opera9.5和chrome


2、String
charAt()
charCodeAt()

stringObject.charAt(index)
功能：返回stringObject中index位置的字符

stringObject.charCodeAt(index)
功能：返回stringObject中index位置字符的字符编码

stringObject.indexOf("o")
功能：从一个字符串中搜索给定的子字符串，返回子字符串的位置
返回值：数值
如果没有找到该子字符串，则返回-1

stringObject.lastIndexOf("o")
功能：从一个字符串中从尾部开始搜索给定的子字符串，返回子字符串的位置
返回值：数值
如果没有找到该子字符串，则返回-1


字符串截取方法：slice()、substring()、substr()

slice()
stringObject.slice(start,end);
功能：截取子字符串
start（必须），指定子字符串开始的位置
end(可选),
当参数为负数时，会将传入的负值与字符串的长度相加
范围：[start,end)，不包含右端

substring()语法与slice一样
区别在于：1、当参数为负数时，自动将参数转换为0
2、substring会把较小的数作为开始位置，将较大的数作为结束位置

substr()
stringObject.substr(start,len)
功能：截取子字符串
参数：1、start：必需，指定子字符串的开始位置
2、len：可选，表示截取的字符总数，省略时截取至字符串的末尾
3、当start为负数时，会将传入的负值与字符串的长度相加
4、当len为负数时，返回空字符串



split()
stringObject.split(separator)
功能：把一个字符串分割成字符串数组
返回值：Array
separator：必需，分隔符

replace()
stringObject.replae(regexp/substr,replacement)
功能：在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串
返回值：String
参数：regexp:必需。规定子字符串或要替换的模式的RegExp对象
replacement：必需。一个字符串值


toUpperCae()和toLowerCase()
将字符串转换成大写和将字符串转换成小写


3、Math
min()、max()、ceil()、floor()、abs()

Math.ceil()
向上取整，即返回大于该值的整数
Math.floor()
向上取整，即返回整数部分
Math.round()
向四舍五入
Math.abs(num)
返回num的绝对值

Math.random()
返回大于等于0小于1的随机数
求n到m之间的随机整数的公式：
random=Math.floor(Math.random()*(m-n+1)+n);


4、date
new Date() 创建一个日期时间对象
getFullYear() 返回4位数的年份
getMonth() 返回日期中的月份，返回值为0-11
getDate() 返回月份中的天数
getDay() 返回星期，返回值为0-6(0--星期天)
getHours() 返回小时
getMinutes() 返回分
getSeconds() 返回秒
getTime() 返回表示日期的毫秒数

setFullYear() 设置4位数的年份
setMonth() 设置日期中的月份，设置值为0-11
setDate() 设置月份中的天数
setDay() 设置星期，设置值为0-6
setHours() 设置小时
setMinutes() 设置分
setSeconds() 设置秒
setTime() 以毫秒数设置日期，会改变整个日期